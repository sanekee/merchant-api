openapi: 3.0.0
info:
  version: 0.0.1
  title: Merchant API
  description: A Simple Merchant API Demo

servers:
  - url: http://127.0.0.1:8123/api

security:
  - BearerAuth: []

paths:
  /merchants:
    get:
      summary: List all merchants
      operationId: "getMerchants"
      tags:
        - merchants
      parameters:
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          description: Successfully returned a list of merchants.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merchant'
        '400':
          $ref: '#/components/responses/400Error'
        '500':
          $ref: '#/components/responses/500Error'

    post:
      summary: Create new merchant
      operationId: "postMerchants"
      tags:
        - merchants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMerchant'
      responses:
        '201':
          description: Successfully created a new merchant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '400':
          $ref: '#/components/responses/400Error'
        '409':
          $ref: '#/components/responses/409Error'
        '500':
          $ref: '#/components/responses/500Error'

  /merchants/{id}:
    get:
      summary: Get merchant
      operationId: "getMerchantById"
      tags:
        - merchants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          
      responses:
        '200':
          description: Successfully retrieved a merchant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
    put:
      summary: Update merchant
      operationId: "putMerchantById"
      tags:
        - merchants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMerchant'
          
      responses:
        '200':
          description: Successfully updated a merchant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
        '409':
          $ref: '#/components/responses/409Error'
        '500':
          $ref: '#/components/responses/500Error'

    delete:
      summary: Delete merchant
      operationId: "deleteMerchantById"
      tags:
        - merchants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          
      responses:
        '200':
          description: Successfully deleted a merchant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'

  /teammembers/merchant/{merchant_id}:
    get:
      summary: List all team members by merchant id
      operationId: "getTeammemberByMerchantId"
      tags:
        - teammembers
      parameters:
        - name: merchant_id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
          
      responses:
        '200':
          description: Successfully returned a list of team members.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/400Error'
        '500':
          $ref: '#/components/responses/500Error'

  /teammembers:
    post:
      summary: Create team member
      operationId: "postTeamMember"
      tags:
        - teammembers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTeamMember'
      responses:
        '200':
          description: Successfully created a new team member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/400Error'
        '409':
          $ref: '#/components/responses/409Error'
        '500':
          $ref: '#/components/responses/500Error'

  /teammembers/{id}:
    get:
      summary: Get team member
      operationId: "getTeammemberById"
      tags:
        - teammembers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          
      responses:
        '200':
          description: Successfully returned a team member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
                
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
    put:
      summary: Update team member
      operationId: "putTeammemberById"
      tags:
        - teammembers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamMember'
          
      responses:
        '200':
          description: Successfully updated a team member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/400Error'
        '409':
          $ref: '#/components/responses/409Error'
        '500':
          $ref: '#/components/responses/500Error'

    delete:
      summary: Delete team member
      operationId: "deleteTeammemberById"
      tags:
        - teammembers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          
      responses:
        '200':
          description: Successfully deleted a team member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '404':
          $ref: '#/components/responses/400Error'
        '500':
          $ref: '#/components/responses/500Error'


components:
  securitySchemes:
    BearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NewTeamMember:
      type: object
      required:
        - email
        - merchant_id
      properties:
        email:
          type: string
        merchant_id:
          type: string
    UpdateTeamMember:
      type: object
      required:
        - email
      properties:
        email:
          type: string
    TeamMember:
      type: object
      required:
        - email
        - merchant_id
        - id
      properties:
        email:
          type: string
        id:
          type: string
        merchant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    NewMerchant:
      type: object
      required:
        - code
      properties:
        code:
            type: string
    UpdateMerchant:
      type: object
      required:
        - code
      properties:
        code:
            type: string
    Merchant:
      type: object
      required:
        - id
        - code
      properties:
        id:
          type: string
        code:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CommonResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - ok
            - error
        message:
          type: string

  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of items on a page.
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 100
        default: 10
      
    PageOffset:
      name: offset
      in: query
      description: Specifies the page number of the item to be displayed.
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 1000
        default: 0

  responses:
    400Error:
      description: Invalid request.
      content:
        application/json:
          schema:
            #  ----- Added line  ------------------------------------
            $ref: '#/components/schemas/CommonResponse'
            #  ---- /Added line  ------------------------------------
    404Error:
      description: Not found.
      content:
        application/json:
          schema:
            #  ----- Added line  ------------------------------------
            $ref: '#/components/schemas/CommonResponse'
            #  ---- /Added line  ------------------------------------
    409Error:
      description: Conflict.
      content:
        application/json:
          schema:
            #  ----- Added line  ------------------------------------
            $ref: '#/components/schemas/CommonResponse'
            #  ---- /Added line  ------------------------------------
    500Error:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            #  ----- Added line  ------------------------------------
            $ref: '#/components/schemas/CommonResponse'
            #  ---- /Added line  ------------------------------------

  #  ---- /Added lines  ----------------------------------------